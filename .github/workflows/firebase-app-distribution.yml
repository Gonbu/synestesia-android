name: Firebase App Distribution

on:
  push:
    branches: [main, develop]
    tags: ["v*"]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      build_type:
        description: "Type de build √† d√©ployer"
        required: true
        default: "debug"
        type: choice
        options:
          - debug
          - release

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create local.defaults.properties
        run: |
          cat > local.defaults.properties << EOF
          # Configuration par d√©faut pour le plugin secrets
          MAPS_API_KEY=placeholder_key
          FIREBASE_PROJECT_ID=synestesia-a0ea7
          FIREBASE_APP_ID=1:389269434145:android:0e49ae880ed25c8c6ed860
          EOF

      - name: Decode Google Services
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > app/google-services.json

      - name: Build and Deploy Debug
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.build_type == 'debug')
        env:
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        run: |
          ./gradlew clean assembleDebug appDistributionUploadDebug
          echo "Debug APK d√©ploy√© avec succ√®s"

      - name: Build and Deploy Release
        if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && inputs.build_type == 'release')
        env:
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        run: |
          ./gradlew clean assembleRelease appDistributionUploadRelease
          echo "Release APK d√©ploy√© avec succ√®s"

      - name: Build and Deploy PR
        if: github.event_name == 'pull_request'
        env:
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        run: |
          ./gradlew clean assembleDebug appDistributionUploadDebug
          echo "PR Debug APK d√©ploy√© avec succ√®s"

      - name: Notify Success
        if: success()
        run: |
          echo "‚úÖ D√©ploiement Firebase App Distribution r√©ussi !"
          echo "üì± V√©rifiez Firebase Console pour voir votre build"

      - name: Notify Failure
        if: failure()
        run: |
          echo "‚ùå √âchec du d√©ploiement Firebase App Distribution"
          echo "üîç V√©rifiez les logs pour plus de d√©tails"
