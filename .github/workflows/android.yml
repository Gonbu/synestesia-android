name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true

jobs:
  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create local.defaults.properties
        run: |
          cat > local.defaults.properties << 'EOF'
          # Fichier de propriétés par défaut pour les secrets
          # Utilisé en CI/CD et en développement local

          # Google Maps API Key (valeur factice pour le build)
          MAPS_API_KEY=your_maps_api_key_here

          # Firebase config (valeurs factices pour le build)
          GOOGLE_APPLICATION_CREDENTIALS=path_to_service_account.json

          # Autres secrets nécessaires au build
          EOF

      - name: Run ktlint check
        run: ./gradlew ktlintCheck

      - name: Run detekt
        run: ./gradlew detekt

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create local.defaults.properties
        run: |
          cat > local.defaults.properties << 'EOF'
          # Fichier de propriétés par défaut pour les secrets
          # Utilisé en CI/CD et en développement local

          # Google Maps API Key (valeur factice pour le build)
          MAPS_API_KEY=your_maps_api_key_here

          # Firebase config (valeurs factices pour le build)
          GOOGLE_APPLICATION_CREDENTIALS=path_to_service_account.json

          # Autres secrets nécessaires au build
          EOF

      - name: Run unit tests
        run: ./gradlew test

      - name: Run instrumentation tests
        run: ./gradlew connectedAndroidTest
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [quality-check, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create local.defaults.properties
        run: |
          cat > local.defaults.properties << 'EOF'
          # Fichier de propriétés par défaut pour les secrets
          # Utilisé en CI/CD et en développement local

          # Google Maps API Key (valeur factice pour le build)
          MAPS_API_KEY=your_maps_api_key_here

          # Firebase config (valeurs factices pour le build)
          GOOGLE_APPLICATION_CREDENTIALS=path_to_service_account.json

          # Autres secrets nécessaires au build
          EOF

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload release APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "table"
          exit-code: "0"
